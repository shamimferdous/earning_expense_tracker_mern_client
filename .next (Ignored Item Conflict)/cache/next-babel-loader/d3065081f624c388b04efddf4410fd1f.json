{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\B A T  M A C H I N E\\\\Dropbox\\\\Github\\\\Track-Earn-Ex__MERN-Stack\\\\client\\\\components\\\\App.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react'; //importing all components\n\nimport Layout from './Layout';\nimport Earning from './Earning';\nimport axios from 'axios';\n\nconst app = ({\n  characterID\n}) => {\n  const {\n    0: earning,\n    1: setEarning\n  } = useState({\n    date: \"\",\n    amount: \"\",\n    note: \"\"\n  });\n  const {\n    0: expense,\n    1: setExpense\n  } = useState({\n    date: \"\",\n    amount: \"\",\n    note: \"\"\n  });\n  const {\n    0: earnings,\n    1: setEarnings\n  } = useState([]);\n  const {\n    0: count,\n    1: setCount\n  } = useState(0); //the useEffect Hook... Getting Data from backend apis\n\n  useEffect(() => {\n    axios.get(`${process.env.serverApi}/api/v1/get-earnings`, {\n      headers: {\n        passcode: `${process.env.passcode}`\n      }\n    }).then(response => {\n      console.log(response.data.earnings);\n      setEarnings(response.data.earnings);\n    });\n  }, [count]); //defining earningOnChange\n\n  const earningOnChange = e => {\n    e.preventDefault();\n    setEarning(_objectSpread(_objectSpread({}, earning), {}, {\n      [e.target.name]: e.target.value\n    }));\n    console.log(earning);\n  }; //defining handleEarningOnSubmit\n\n\n  const handleEarningOnSubmit = e => {\n    e.preventDefault();\n    axios.post(`${authContext.passcode}/api/v1/post-earning`, earning, {\n      headers: {\n        'passcode': `${authContext.passcode}`\n      }\n    }).then(response => {\n      if (response.data.success === false) {\n        console.log(`Internal Server Error`);\n      } else {\n        console.log(`Operation Successfull`);\n        setCount(Math.random());\n      }\n    });\n    console.log('handleEarningOnSubmit Triggered');\n  }; //defining earning counter function\n\n\n  const earningCounter = () => {\n    let totalEarning = 0;\n\n    for (let i = 0; i < earnings.length; i++) {\n      totalEarning = totalEarning + earnings[i].amount;\n    }\n\n    return totalEarning;\n  }; //defining onChangeExpense\n\n\n  const onChangeExpense = e => {\n    e.preventDefault();\n    setExpense(_objectSpread(_objectSpread({}, expense), {}, {\n      [e.target.name]: e.target.value\n    }));\n    console.log(expense);\n  }; //defining expenseOnSubmitHandler\n\n\n  const expenseOnSubmitHandler = () => {\n    e.preventDefault();\n    axios.post(`${authContext.passcode}/api/v1/post-earning`, expense, {\n      headers: {\n        'passcode': `${authContext.passcode}`\n      }\n    }).then(response => {\n      if (response.data.success === false) {\n        console.log(`Internal Server Error`);\n      } else {\n        console.log(`Operation Successfull`);\n        setCount(Math.random());\n      }\n    });\n    console.log('handleExpenseOnSubmit Triggered');\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    className: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Earnings -  \", __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 40\n    }\n  }, \" \", earningCounter(), \" \"), \" \"), __jsx(\"form\", {\n    className: \"main-form\",\n    onSubmit: handleEarningOnSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    onChange: earningOnChange,\n    style: {\n      padding: '.4rem'\n    },\n    className: \"binary-input\",\n    type: \"date\",\n    name: \"date\",\n    placeholder: \"Enter Date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    onChange: earningOnChange,\n    className: \"binary-input\",\n    type: \"number\",\n    name: \"amount\",\n    placeholder: \"Enter Amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    onChange: earningOnChange,\n    className: \"binary-input-2\",\n    type: \"text\",\n    name: \"note\",\n    placeholder: \"Enter Note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    className: \"binary-button\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"Insert\")), __jsx(\"div\", {\n    className: \"table-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"table table-head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, \"Timestamp\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, \"Date\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, \"Note\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, \"Amount\")), earnings.map(earning => {\n    return __jsx(Earning, {\n      key: earning._id,\n      earning: earning,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 24\n      }\n    });\n  }))), __jsx(\"div\", {\n    className: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, \"Expenses\"), __jsx(\"form\", {\n    className: \"main-form\",\n    onSubmit: expenseOnSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    onChange: onChangeExpense,\n    style: {\n      padding: '.4rem'\n    },\n    className: \"binary-input\",\n    type: \"date\",\n    name: \"date\",\n    placeholder: \"Enter Date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    onChange: onChangeExpense,\n    className: \"binary-input\",\n    type: \"number\",\n    name: \"amount\",\n    placeholder: \"Enter Amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    onChange: onChangeExpense,\n    className: \"binary-input-2\",\n    type: \"text\",\n    name: \"note\",\n    placeholder: \"Enter Note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    className: \"binary-button\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, \"Insert\")), __jsx(\"div\", {\n    className: \"table-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"table table-head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }, \"Timestamp\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, \"Date\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }, \"Note\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, \"Amount\")), __jsx(\"div\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }, \"22/4/2001\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, \"23/3/2003\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, \"Welcome Amigo\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }, \"56\"))))));\n};\n\nexport default app;","map":{"version":3,"sources":["C:/Users/B A T  M A C H I N E/Dropbox/Github/Track-Earn-Ex__MERN-Stack/client/components/App.jsx"],"names":["useState","useEffect","Layout","Earning","axios","app","characterID","earning","setEarning","date","amount","note","expense","setExpense","earnings","setEarnings","count","setCount","get","process","env","serverApi","headers","passcode","then","response","console","log","data","earningOnChange","e","preventDefault","target","name","value","handleEarningOnSubmit","post","authContext","success","Math","random","earningCounter","totalEarning","i","length","onChangeExpense","expenseOnSubmitHandler","padding","map","_id"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\n//importing all components\r\nimport Layout from './Layout';\r\nimport Earning from './Earning';\r\n\r\n\r\nimport axios from 'axios';\r\n\r\nconst app = ({ characterID }) => {\r\n\r\n  const [earning, setEarning] = useState({ date: \"\", amount: \"\", note: \"\" });\r\n  const [expense, setExpense] = useState({ date: \"\", amount: \"\", note: \"\" });\r\n  const [earnings, setEarnings] = useState([]);\r\n\r\n  const [count, setCount] = useState(0);\r\n\r\n  //the useEffect Hook... Getting Data from backend apis\r\n  useEffect(() => {\r\n    axios.get(`${process.env.serverApi}/api/v1/get-earnings`, { headers: { passcode: `${process.env.passcode}` } })\r\n      .then(response => {\r\n        console.log(response.data.earnings);\r\n        setEarnings(response.data.earnings);\r\n      })\r\n  }, [count]);\r\n\r\n  //defining earningOnChange\r\n  const earningOnChange = e => {\r\n    e.preventDefault();\r\n    setEarning({ ...earning, [e.target.name]: e.target.value });\r\n    console.log(earning);\r\n  }\r\n\r\n  //defining handleEarningOnSubmit\r\n  const handleEarningOnSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    axios.post(`${authContext.passcode}/api/v1/post-earning`, earning,\r\n      { headers: { 'passcode': `${authContext.passcode}` } }).then(response => {\r\n        if (response.data.success === false) {\r\n          console.log(`Internal Server Error`);\r\n        } else {\r\n          console.log(`Operation Successfull`);\r\n          setCount(Math.random());\r\n        }\r\n      })\r\n\r\n    console.log('handleEarningOnSubmit Triggered');\r\n  }\r\n  //defining earning counter function\r\n  const earningCounter = () => {\r\n    let totalEarning = 0;\r\n\r\n    for (let i = 0; i < earnings.length; i++) {\r\n      totalEarning = totalEarning + earnings[i].amount;\r\n    }\r\n\r\n    return totalEarning;\r\n  }\r\n\r\n  //defining onChangeExpense\r\n  const onChangeExpense = e => {\r\n    e.preventDefault();\r\n\r\n    setExpense({ ...expense, [e.target.name]: e.target.value });\r\n    console.log(expense);\r\n  }\r\n\r\n  //defining expenseOnSubmitHandler\r\n  const expenseOnSubmitHandler = () => {\r\n    e.preventDefault();\r\n\r\n    axios.post(`${authContext.passcode}/api/v1/post-earning`, expense,\r\n      { headers: { 'passcode': `${authContext.passcode}` } }).then(response => {\r\n        if (response.data.success === false) {\r\n          console.log(`Internal Server Error`);\r\n        } else {\r\n          console.log(`Operation Successfull`);\r\n          setCount(Math.random());\r\n        }\r\n      })\r\n\r\n    console.log('handleExpenseOnSubmit Triggered');\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <div className=\"right\">\r\n\r\n          <label className>Earnings -  <span> {earningCounter()} </span> </label>\r\n\r\n          {/* Earning Form */}\r\n          <form className=\"main-form\" onSubmit={handleEarningOnSubmit}>\r\n            <input onChange={earningOnChange} style={{ padding: '.4rem' }} className=\"binary-input\" type=\"date\" name=\"date\" placeholder=\"Enter Date\" />\r\n            <input onChange={earningOnChange} className=\"binary-input\" type=\"number\" name=\"amount\" placeholder=\"Enter Amount\" />\r\n            <input onChange={earningOnChange} className=\"binary-input-2\" type=\"text\" name=\"note\" placeholder=\"Enter Note\" />\r\n            <button className=\"binary-button\" type=\"submit\">Insert</button>\r\n          </form>\r\n          {/* Earning Table */}\r\n          <div className=\"table-wrapper\">\r\n            <div className=\"table table-head\">\r\n              <span>Timestamp</span>\r\n              <span>Date</span>\r\n              <span>Note</span>\r\n              <span>Amount</span>\r\n            </div>\r\n\r\n            {/* 🎈 Looping Here 🎈 */}\r\n            {\r\n              earnings.map(earning => {\r\n                return <Earning key={earning._id} earning={earning} />\r\n              })\r\n            }\r\n\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </div>\r\n        <div className=\"left\">\r\n\r\n          <label>Expenses</label>\r\n          {/* Earning Form */}\r\n          <form className=\"main-form\" onSubmit={expenseOnSubmitHandler}>\r\n            <input onChange={onChangeExpense} style={{ padding: '.4rem' }} className=\"binary-input\" type=\"date\" name=\"date\" placeholder=\"Enter Date\" />\r\n            <input onChange={onChangeExpense} className=\"binary-input\" type=\"number\" name=\"amount\" placeholder=\"Enter Amount\" />\r\n            <input onChange={onChangeExpense} className=\"binary-input-2\" type=\"text\" name=\"note\" placeholder=\"Enter Note\" />\r\n            <button className=\"binary-button\" type=\"submit\">Insert</button>\r\n          </form>\r\n          {/* Expense Table */}\r\n          <div className=\"table-wrapper\">\r\n            <div className=\"table table-head\">\r\n              <span>Timestamp</span>\r\n              <span>Date</span>\r\n              <span>Note</span>\r\n              <span>Amount</span>\r\n            </div>\r\n\r\n            <div className=\"table\">\r\n              <span>22/4/2001</span>\r\n              <span>23/3/2003</span>\r\n              <span>Welcome Amigo</span>\r\n              <span>56</span>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </Layout>\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default app;\r\n\r\n"]},"metadata":{},"sourceType":"module"}