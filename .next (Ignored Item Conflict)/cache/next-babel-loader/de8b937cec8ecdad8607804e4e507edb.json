{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\B A T  M A C H I N E\\\\Dropbox\\\\Github\\\\Track-Earn-Ex__MERN-Stack\\\\client\\\\components\\\\App.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect, useContext } from 'react'; //importing all components\n\nimport Layout from './Layout';\nimport Earning from './Earning';\nimport Expense from './Expense'; //importing context api\n\nimport { AuthContext } from '../context-api/AuthContext';\nimport axios from 'axios';\n\nconst App = props => {\n  const {\n    0: earning,\n    1: setEarning\n  } = useState({\n    date: \"\",\n    amount: \"\",\n    note: \"\"\n  });\n  const {\n    0: expense,\n    1: setExpense\n  } = useState({\n    date: \"\",\n    amount: \"\",\n    note: \"\"\n  });\n  const {\n    0: earnings,\n    1: setEarnings\n  } = useState([]);\n  const {\n    0: expenses,\n    1: setExpenses\n  } = useState([]);\n  const {\n    0: count,\n    1: setCount\n  } = useState(0);\n  const authContext = useContext(AuthContext); //the useEffect Hook... Getting Data from backend apis\n\n  useEffect(() => {\n    axios.get(`${process.env.serverApi}/api/v1/get-earnings`, {\n      headers: {\n        passcode: `${authContext.passcode}`\n      }\n    }).then(response => {\n      setEarnings(response.data.earnings);\n    });\n    axios.get(`${process.env.serverApi}/api/v1/get-expenses`, {\n      headers: {\n        passcode: `${authContext.passcode}`\n      }\n    }).then(response => {\n      setExpenses(response.data.expenses);\n    });\n  }, [count]); //defining earningOnChange\n\n  const earningOnChange = e => {\n    e.preventDefault();\n    setEarning(_objectSpread(_objectSpread({}, earning), {}, {\n      [e.target.name]: e.target.value\n    }));\n    console.log(earning);\n  }; //defining handleEarningOnSubmit\n\n\n  const handleEarningOnSubmit = e => {\n    e.preventDefault();\n    axios.post(`${process.env.serverApi}/api/v1/post-earning`, earning, {\n      headers: {\n        'passcode': `${authContext.passcode}`\n      }\n    }).then(response => {\n      if (response.data.success === false) {\n        console.log(`Internal Server Error`);\n      } else {\n        console.log(`Operation Successfull`);\n        setCount(Math.random());\n      }\n    });\n    console.log('handleEarningOnSubmit Triggered');\n  }; //defining earning counter function\n\n\n  const earningCounter = () => {\n    let totalEarning = 0;\n\n    for (let i = 0; i < earnings.length; i++) {\n      totalEarning = totalEarning + earnings[i].amount;\n    }\n\n    return totalEarning;\n  }; //defining onChangeExpense\n\n\n  const onChangeExpense = e => {\n    e.preventDefault();\n    setExpense(_objectSpread(_objectSpread({}, expense), {}, {\n      [e.target.name]: e.target.value\n    }));\n    console.log(expense);\n  }; //defining expenseOnSubmitHandler\n\n\n  const expenseOnSubmitHandler = e => {\n    e.preventDefault();\n    axios.post(`${process.env.serverApi}/api/v1/post-expense`, expense, {\n      headers: {\n        'passcode': `${authContext.passcode}`\n      }\n    }).then(response => {\n      if (response.data.success === false) {\n        console.log(`Internal Server Error`);\n      } else {\n        console.log(`Operation Successfull`);\n        setCount(Math.random());\n      }\n    });\n    console.log('handleExpenseOnSubmit Triggered');\n  }; //defining expense counter\n  //defining earning counter function\n\n\n  const expenseCounter = () => {\n    let totalExpense = 0;\n\n    for (let i = 0; i < expenses.length; i++) {\n      totalExpense = totalExpense + expenses[i].amount;\n    }\n\n    return totalExpense;\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    className: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, \"Earnings -  \", __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 40\n    }\n  }, \" \", earningCounter(), \" \"), \" \"), __jsx(\"form\", {\n    className: \"main-form\",\n    onSubmit: handleEarningOnSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    onChange: earningOnChange,\n    style: {\n      padding: '.4rem'\n    },\n    className: \"binary-input\",\n    type: \"date\",\n    name: \"date\",\n    placeholder: \"Enter Date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    onChange: earningOnChange,\n    className: \"binary-input\",\n    type: \"number\",\n    name: \"amount\",\n    placeholder: \"Enter Amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    onChange: earningOnChange,\n    className: \"binary-input-2\",\n    type: \"text\",\n    name: \"note\",\n    placeholder: \"Enter Note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    className: \"binary-button\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, \"Insert\")), __jsx(\"div\", {\n    className: \"table-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"table table-head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, \"Timestamp\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, \"Date\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, \"Note\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, \"Amount\")), earnings.map(earning => {\n    return __jsx(Earning, {\n      key: earning._id,\n      earning: earning,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 24\n      }\n    });\n  }))), __jsx(\"div\", {\n    className: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, \"Expenses - expenseCounter()\"), __jsx(\"form\", {\n    className: \"main-form\",\n    onSubmit: expenseOnSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    onChange: onChangeExpense,\n    style: {\n      padding: '.4rem'\n    },\n    className: \"binary-input\",\n    type: \"date\",\n    name: \"date\",\n    placeholder: \"Enter Date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    onChange: onChangeExpense,\n    className: \"binary-input\",\n    type: \"number\",\n    name: \"amount\",\n    placeholder: \"Enter Amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    onChange: onChangeExpense,\n    className: \"binary-input-2\",\n    type: \"text\",\n    name: \"note\",\n    placeholder: \"Enter Note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    className: \"binary-button\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, \"Insert\")), __jsx(\"div\", {\n    className: \"table-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"table table-head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, \"Timestamp\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }, \"Date\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 15\n    }\n  }, \"Note\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }, \"Amount\")), expenses.map(expense => {\n    return __jsx(Expense, {\n      key: expense._id,\n      expense: expense,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 24\n      }\n    });\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/B A T  M A C H I N E/Dropbox/Github/Track-Earn-Ex__MERN-Stack/client/components/App.jsx"],"names":["useState","useEffect","useContext","Layout","Earning","Expense","AuthContext","axios","App","props","earning","setEarning","date","amount","note","expense","setExpense","earnings","setEarnings","expenses","setExpenses","count","setCount","authContext","get","process","env","serverApi","headers","passcode","then","response","data","earningOnChange","e","preventDefault","target","name","value","console","log","handleEarningOnSubmit","post","success","Math","random","earningCounter","totalEarning","i","length","onChangeExpense","expenseOnSubmitHandler","expenseCounter","totalExpense","padding","map","_id"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from 'react';\r\n\r\n//importing all components\r\nimport Layout from './Layout';\r\nimport Earning from './Earning';\r\nimport Expense from './Expense';\r\n\r\n//importing context api\r\nimport { AuthContext } from '../context-api/AuthContext';\r\n\r\n\r\nimport axios from 'axios';\r\n\r\nconst App = (props) => {\r\n\r\n  const [earning, setEarning] = useState({ date: \"\", amount: \"\", note: \"\" });\r\n  const [expense, setExpense] = useState({ date: \"\", amount: \"\", note: \"\" });\r\n  const [earnings, setEarnings] = useState([]);\r\n  const [expenses, setExpenses] = useState([]);\r\n\r\n  const [count, setCount] = useState(0);\r\n\r\n  const authContext = useContext(AuthContext);\r\n\r\n  //the useEffect Hook... Getting Data from backend apis\r\n  useEffect(() => {\r\n    axios.get(`${process.env.serverApi}/api/v1/get-earnings`, { headers: { passcode: `${authContext.passcode}` } })\r\n      .then(response => {\r\n        setEarnings(response.data.earnings);\r\n      });\r\n\r\n      axios.get(`${process.env.serverApi}/api/v1/get-expenses`, { headers: { passcode: `${authContext.passcode}` } })\r\n      .then(response => {\r\n        setExpenses(response.data.expenses);\r\n      });\r\n  }, [count]);\r\n\r\n  //defining earningOnChange\r\n  const earningOnChange = e => {\r\n    e.preventDefault();\r\n    setEarning({ ...earning, [e.target.name]: e.target.value });\r\n    console.log(earning);\r\n  }\r\n\r\n  //defining handleEarningOnSubmit\r\n  const handleEarningOnSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    axios.post(`${process.env.serverApi}/api/v1/post-earning`, earning,\r\n      { headers: { 'passcode': `${authContext.passcode}` } }).then(response => {\r\n        if (response.data.success === false) {\r\n          console.log(`Internal Server Error`);\r\n        } else {\r\n          console.log(`Operation Successfull`);\r\n          setCount(Math.random());\r\n        }\r\n      })\r\n\r\n    console.log('handleEarningOnSubmit Triggered');\r\n  }\r\n\r\n  //defining earning counter function\r\n  const earningCounter = () => {\r\n    let totalEarning = 0;\r\n\r\n    for (let i = 0; i < earnings.length; i++) {\r\n      totalEarning = totalEarning + earnings[i].amount;\r\n    }\r\n\r\n    return totalEarning;\r\n  }\r\n\r\n  //defining onChangeExpense\r\n  const onChangeExpense = e => {\r\n    e.preventDefault();\r\n\r\n    setExpense({ ...expense, [e.target.name]: e.target.value });\r\n    console.log(expense);\r\n  }\r\n\r\n  //defining expenseOnSubmitHandler\r\n  const expenseOnSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    axios.post(`${process.env.serverApi}/api/v1/post-expense`, expense,\r\n      { headers: { 'passcode': `${authContext.passcode}` } }).then(response => {\r\n        if (response.data.success === false) {\r\n          console.log(`Internal Server Error`);\r\n        } else {\r\n          console.log(`Operation Successfull`);\r\n          setCount(Math.random());\r\n        }\r\n      })\r\n\r\n    console.log('handleExpenseOnSubmit Triggered');\r\n  }\r\n\r\n\r\n  //defining expense counter\r\n    //defining earning counter function\r\n    const expenseCounter = () => {\r\n      let totalExpense = 0;\r\n  \r\n      for (let i = 0; i < expenses.length; i++) {\r\n        totalExpense = totalExpense + expenses[i].amount;\r\n      }\r\n  \r\n      return totalExpense;\r\n    }\r\n  \r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <div className=\"right\">\r\n\r\n          <label className>Earnings -  <span> {earningCounter()} </span> </label>\r\n\r\n          {/* Earning Form */}\r\n          <form className=\"main-form\" onSubmit={handleEarningOnSubmit}>\r\n            <input onChange={earningOnChange} style={{ padding: '.4rem' }} className=\"binary-input\" type=\"date\" name=\"date\" placeholder=\"Enter Date\" />\r\n            <input onChange={earningOnChange} className=\"binary-input\" type=\"number\" name=\"amount\" placeholder=\"Enter Amount\" />\r\n            <input onChange={earningOnChange} className=\"binary-input-2\" type=\"text\" name=\"note\" placeholder=\"Enter Note\" />\r\n            <button className=\"binary-button\" type=\"submit\">Insert</button>\r\n          </form>\r\n          {/* Earning Table */}\r\n          <div className=\"table-wrapper\">\r\n            <div className=\"table table-head\">\r\n              <span>Timestamp</span>\r\n              <span>Date</span>\r\n              <span>Note</span>\r\n              <span>Amount</span>\r\n            </div>\r\n\r\n            {/* 🎈 Looping Here 🎈 */}\r\n            {\r\n              earnings.map(earning => {\r\n                return <Earning key={earning._id} earning={earning} />\r\n              })\r\n            }\r\n\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </div>\r\n        <div className=\"left\">\r\n\r\n          <label>Expenses - expenseCounter()</label>\r\n          {/* Earning Form */}\r\n          <form className=\"main-form\" onSubmit={expenseOnSubmitHandler}>\r\n            <input onChange={onChangeExpense} style={{ padding: '.4rem' }} className=\"binary-input\" type=\"date\" name=\"date\" placeholder=\"Enter Date\" />\r\n            <input onChange={onChangeExpense} className=\"binary-input\" type=\"number\" name=\"amount\" placeholder=\"Enter Amount\" />\r\n            <input onChange={onChangeExpense} className=\"binary-input-2\" type=\"text\" name=\"note\" placeholder=\"Enter Note\" />\r\n            <button className=\"binary-button\" type=\"submit\">Insert</button>\r\n          </form>\r\n          {/* Expense Table */}\r\n          <div className=\"table-wrapper\">\r\n            <div className=\"table table-head\">\r\n              <span>Timestamp</span>\r\n              <span>Date</span>\r\n              <span>Note</span>\r\n              <span>Amount</span>\r\n            </div>\r\n\r\n            {/* 🎈 Looping Here 🎈 */}\r\n            {\r\n              expenses.map(expense => {\r\n                return <Expense key={expense._id} expense={expense} />\r\n              })\r\n            }\r\n\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </Layout>\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default App;\r\n\r\n"]},"metadata":{},"sourceType":"module"}